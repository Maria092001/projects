const posts = [];
let lastUserActivityTime = null;

function createPost(post) {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            posts.push(post);
            resolve('Post created successfully');
        }, 1000);
    });
}

function updateLastUserActivityTime() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            lastUserActivityTime = new Date();
            resolve(lastUserActivityTime);
        }, 1000);
    });
}

function deletePost() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            if (posts.length > 0) {
                const deletedPost = posts.pop();
                resolve(`Post deleted: ${deletedPost}`);
            } else {
                reject(new Error('ERROR: ARRAY IS EMPTY'));
            }
        }, 1000);
    });
}

// Usage:

createPost('First post')
    .then(() => updateLastUserActivityTime())
    .then(updatedTime => console.log(`Last Activity Time: ${updatedTime}`))
    .then(() => createPost('Second post'))
    .then(() => updateLastUserActivityTime())
    .then(updatedTime => console.log(`Last Activity Time: ${updatedTime}`))
    .then(() => createPost('Third post'))
    .then(() => updateLastUserActivityTime())
    .then(updatedTime => console.log(`Last Activity Time: ${updatedTime}`))
    .then(() => deletePost())
    .then(deletedPost => console.log(`Remaining Posts after deletion: ${posts.join(', ')}`))
    .catch(error => console.error(error));
